version: 2.1

aws_docker_image: &aws_docker_image
  docker:
    - image: amazon/aws-cli

python_docker_image: &python_docker_image
  docker:
    - image: python:3.7.3-stretch

commands:
  destroy-environment:
    description: Destroy vpc and eks cloudformation stacks given a workflow ID.    
    steps:
      - run:
          name: Destroy environments
          when: on_fail
          command: |
              aws cloudformation delete-stack --stack-name network-stack-${ENV_NAME}
              aws cloudformation delete-stack --stack-name eks-stack-${CIRCLE_WORKFLOW_ID:0:7}

jobs:

    build-test-lint:
      <<: *python_docker_image
      working_directory: ~/repo
      steps:
        - checkout
        - restore_cache:
            keys:
              - v1-dependencies-{{ checksum "./app/requirements.txt" }}
              # fallback to using the latest cache if no exact match is found
              - v1-dependencies-
        - run:
            name: set up python
            command: |
                cd ./app
                make setup
        - run:
            name: install dependencies
            command: |
                cd ./app
                make install
        - save_cache:
            paths:
                - ./.devops
            key: v1-dependencies-{{ checksum "./app/requirements.txt" }}
        - run:
            name: run test
            command: |
                cd ./app
                make test
        - run:
            name: run lint
            command: |
              cd ./app
              source .devops/bin/activate
              make lint
  
    deploy-infrastructure-network:
      <<: *aws_docker_image
      steps:
        - checkout
        - run:
            name: Deploy network stack
            command: |
              aws cloudformation deploy \
              --template-file .circleci/cf-templates/network.yml \
              --tags project=udapeople \
              --stack-name "network-stack-${ENV_NAME}" \
              --parameter-overrides EnvironmentName="${ENV_NAME}" 


workflows:
  build-test-lint:
    jobs:
      - build-test-lint
      - deploy-infrastructure-network:
          filters:
            branches:
              only: [deploy-network]
